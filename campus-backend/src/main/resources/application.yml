server:
  port: 8080
  servlet:
    context-path: /api/v1

spring:
  application:
    name: campus-trading-system
  
  # Banner Configuration
  banner:
    location: classpath:banner.txt
  
  # MVC Configuration
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
    static-path-pattern: /static/**
  
  # Database Configuration
  datasource:
    url: jdbc:mysql://localhost:3306/campus_trading?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&autoReconnect=true&failOverReadOnly=false
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: false
        show_sql: false
    open-in-view: false
  
  # Redis Configuration
  data:
    redis:
      host: localhost
      port: 6379
      password: 
      database: 0
      timeout: 3000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms
  
  # File Upload Configuration
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 100MB
  
  # Jackson Configuration
  jackson:
    time-zone: Asia/Shanghai
    date-format: yyyy-MM-dd HH:mm:ss
    default-property-inclusion: non_null

# JWT Configuration
jwt:
  secret: campusTradingSystemSecretKey2024ForJWTTokenGeneration
  expiration: 86400000 # 24 hours in milliseconds
  header: Authorization
  prefix: Bearer 

# File Storage Configuration
file:
  upload:
    path: ./uploads/
    max-size: 20971520 # 20MB in bytes
    allowed-types: jpg,jpeg,png,gif,webp

# Logging Configuration
logging:
  level:
    com.example.campussystem: INFO
    org.springframework.security: WARN
    org.hibernate: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    org.springframework.boot: INFO
    org.springframework.web: WARN
    com.zaxxer.hikari: WARN
    org.apache.catalina: WARN
    org.apache.tomcat: WARN
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"
  file:
    name: logs/campus-trading-system.log

# Management Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when_authorized

# Custom Application Configuration
app:
  cors:
    allowed-origins: http://localhost:3000,http://localhost:5173,file://
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
  
  security:
    password:
      min-length: 8
      require-uppercase: true
      require-lowercase: true
      require-digit: true
    
    rate-limit:
      enabled: true
      requests-per-minute: 60